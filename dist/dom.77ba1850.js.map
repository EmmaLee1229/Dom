{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","x","arr","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","contentText","html","style","Object","key","class","add","className","classList","has","contains","on","event","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","travel","nodeList","i","call","index","count"],"mappings":";AAAAA,OAAOC,IAAM,CACTC,OAAOC,SAAAA,GACGC,IAAAA,EAAYC,SAASC,cAAc,YAGlCF,OADPA,EAAUG,UAAYJ,EAAOK,OACtBJ,EAAUK,QAAQC,YAE7BC,MAAMC,SAAAA,EAAMC,GACRD,EAAKE,WAAWC,aAAaF,EAAOD,EAAKI,cAE7CC,OAAOL,SAAAA,EAAMC,GACTD,EAAKE,WAAWC,aAAaF,EAAOD,IAExCM,OAAOC,SAAAA,EAAQP,GACXO,EAAOC,YAAYR,IAGvBS,KAAKT,SAAAA,EAAMC,GACPZ,IAAIgB,OAAOL,EAAMC,GACjBZ,IAAIiB,OAAOL,EAAOD,IAEtBU,OAAOV,SAAAA,GAEIA,OADPA,EAAKE,WAAWS,YAAYX,GACrBA,GAEXY,MAAMZ,SAAAA,GAEiBA,EAAKa,WAGjBC,IAHDD,IACAE,EAAM,GACRD,EAAId,EAAKF,WACNgB,GACHC,EAAIC,KAAK3B,IAAIqB,OAAOI,IACpBA,EAAId,EAAKF,WAENiB,OAAAA,GAEXE,KAAKjB,SAAAA,EAAMkB,EAAMC,GAETC,GAAqB,IAArBA,UAAUC,OACVrB,EAAKsB,aAAaJ,EAAMC,QACrB,GAAyB,IAArBC,UAAUC,OACVrB,OAAAA,EAAKuB,aAAaL,IAGjCM,KAAKxB,SAAAA,EAAMT,GACH6B,GAAqB,IAArBA,UAAUC,OACN,cAAerB,EACfA,EAAKyB,UAAYlC,EAEjBS,EAAK0B,YAAcnC,OAEpB,GAAyB,IAArB6B,UAAUC,OACb,MAAA,cAAerB,EACRA,EAAKyB,UAELzB,EAAK0B,aAIxBC,KAAK3B,SAAAA,EAAMT,GACH6B,GAAqB,IAArBA,UAAUC,OACVrB,EAAKL,UAAYJ,OACd,GAAyB,IAArB6B,UAAUC,OACVrB,OAAAA,EAAKL,WAGpBiC,MAAM5B,SAAAA,EAAMkB,EAAMC,GACVC,GAAqB,IAArBA,UAAUC,OAEVrB,EAAK4B,MAAMV,GAAQC,OAChB,GAAyB,IAArBC,UAAUC,OAAc,CAC3B,GAAgB,iBAATH,EAEAlB,OAAAA,EAAK4B,MAAMV,GACf,GAAIA,aAAgBW,OAElB,IAAA,IAAIC,KAAOZ,EACZlB,EAAK4B,MAAME,GAAOZ,EAAKY,KAKvCC,MAAM,CACFC,IAAIhC,SAAAA,EAAKiC,GACLjC,EAAKkC,UAAUF,IAAIC,IAEvBvB,OAAOV,SAAAA,EAAKiC,GACRjC,EAAKkC,UAAUxB,OAAOuB,IAE1BE,IAAInC,SAAAA,EAAKiC,GACEjC,OAAAA,EAAKkC,UAAUE,SAASH,KAGvCI,GAAGrC,SAAAA,EAAKsC,EAAMC,GACVvC,EAAKwC,iBAAiBF,EAAMC,IAEhCE,IAAIzC,SAAAA,EAAKsC,EAAMC,GACXvC,EAAK0C,oBAAoBJ,EAAMC,IAEnCI,KAAKC,SAAAA,EAASC,GACH,OAACA,GAAOpD,UAAUqD,iBAAiBF,IAE9CrC,OAAOP,SAAAA,GACIA,OAAAA,EAAKE,YAEhB6C,SAAS/C,SAAAA,GACEA,OAAAA,EAAK+C,UAEhBC,SAAShD,SAAAA,GAECiD,OAAAA,MAAMC,KAAKlD,EAAKE,WAAW6C,UAAUI,OAAO,SAAAC,GAAKA,OAAAA,IAAKpD,KAEhEqD,KAAKrD,SAAAA,GAEKc,IADFA,IAAAA,EAAId,EAAKI,YACPU,GAAkB,IAAbA,EAAEwC,UACTxC,EAAIA,EAAEV,YAEHU,OAAAA,GAEXyC,SAASvD,SAAAA,GAECc,IADFA,IAAAA,EAAId,EAAKwD,gBACP1C,GAAkB,IAAbA,EAAEwC,UACTxC,EAAIA,EAAE0C,gBAEH1C,OAAAA,GAEX2C,OAAOC,SAAAA,EAASnB,GACR,IAAA,IAAIoB,EAAI,EAAEA,EAAED,EAASrC,OAAOsC,IAC5BpB,EAAGqB,KAAK,KAAKF,EAASC,KAG9BE,MAAM7D,SAAAA,GAGIc,IAFFA,IAAAA,EAAIzB,IAAIkE,SAASvD,GACjB8D,EAAO,EACLhD,GACFA,EAAIzB,IAAIkE,SAASzC,GACjBgD,GAAO,EAEJA,OAAAA","file":"dom.77ba1850.js","sourceRoot":"../src","sourcesContent":["window.dom = {\n    create(string) {\n        const container = document.createElement('template')\n        //trim函数清除空格\n        container.innerHTML = string.trim()\n        return container.content.firstChild\n    },\n    after(node, node2) {\n        node.parentNode.insertBefore(node2, node.nextSibling)\n    },\n    before(node, node2) {\n        node.parentNode.insertBefore(node2, node)\n    },\n    append(parent, node) {\n        parent.appendChild(node)\n    },\n    //用node2包裹node\n    wrap(node, node2) {\n        dom.before(node, node2)\n        dom.append(node2, node)\n    },\n    remove(node) {\n        node.parentNode.removeChild(node)\n        return node\n    },\n    empty(node) {\n        //可简写为 const {childNodes} = node\n        const childNodes = node.childNodes\n        const arr = []\n        let x = node.firstChild\n        while (x) {\n            arr.push(dom.remove(x))\n            x = node.firstChild\n        }\n        return arr\n    },\n    attr(node, name, value) {\n        //重载\n        if (arguments.length === 3) {\n            node.setAttribute(name, value)\n        } else if (arguments.length === 2) {\n            return node.getAttribute(name)\n        }\n    },\n    text(node, string) {\n        if (arguments.length === 2) {\n            if ('innerText' in node) {\n                node.innerText = string\n            } else {\n                node.contentText = string\n            }\n        } else if (arguments.length === 1) {\n            if ('innerText' in node) {\n                return node.innerText\n            } else {\n                return node.contentText\n            }\n        }\n    },\n    html(node, string) {\n        if (arguments.length === 2) {\n            node.innerHTML = string\n        } else if (arguments.length === 1) {\n            return node.innerHTML\n        }\n    },\n    style(node, name, value) {\n        if (arguments.length === 3) {\n            //(node,'color','red')\n            node.style[name] = value\n        } else if (arguments.length === 2) {\n            if (typeof name === 'string') {\n                //(node,'color')\n                return node.style[name]\n            } else if (name instanceof Object) {\n                //(node,{color:'red', border:'1px solid red'})\n                for (let key in name) {\n                    node.style[key] = name[key]\n                }\n            }\n        }\n    },\n    class:{\n        add(node,className){\n            node.classList.add(className)\n        },\n        remove(node,className){\n            node.classList.remove(className)\n        },\n        has(node,className){\n            return node.classList.contains(className)\n        }\n    },\n    on(node,event,fn) {\n        node.addEventListener(event,fn)\n    },\n    off(node,event,fn){\n        node.removeEventListener(event,fn)\n    },\n    find(selector,scope){\n        return (scope||document).querySelectorAll(selector)\n    },\n    parent(node){\n        return node.parentNode\n    },\n    children(node){\n        return node.children\n    },\n    siblings(node){\n        //只有数组可以使用filter\n       return Array.from(node.parentNode.children).filter(n => n!== node)\n    },\n    next(node){\n        let x = node.nextSibling\n        while(x && x.nodeType===3){\n            x = x.nextSibling\n        }\n        return x\n    },\n    previous(node){\n        let x = node.previousSibling\n        while(x && x.nodeType===3){\n            x = x.previousSibling\n        }\n        return x\n    },\n    travel(nodeList,fn){\n        for(let i = 0;i<nodeList.length;i++){\n            fn.call(null,nodeList[i])\n        }\n    },\n    index(node){\n        let x = dom.previous(node)\n        let count =0\n        while(x){\n            x = dom.previous(x)\n            count+=1\n        }\n        return count\n        //或采取遍历其他的兄弟节点\n        // const list = dom.children(node.parentNode)\n        // let i\n        // for(i=0;i<list.length;i++){\n        //     if(list[i]===node)\n        //     break\n        // }\n        // return i\n    }\n\n};"]}